{"version":3,"sources":["sounds/clap.wav","sounds/hihat.wav","sounds/kick.wav","sounds/openhat.wav","sounds/boom.wav","sounds/ride.wav","sounds/snare.wav","sounds/tom.wav","sounds/tink.wav","components/Key.js","components/Keyboard.js","components/beats.js","Containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","Key","letter","name","id","onClick","className","data-key","Keyboard","beats","handleKeyDown","e","audio","document","querySelector","keyCode","key","map","user","i","classList","add","currentTime","play","handleClick","x","currentTarget","data","getAttribute","removeTransition","propertyName","target","remove","React","useEffect","window","addEventListener","Array","from","querySelectorAll","forEach","src","clap","hihat","kick","openhat","boom","ride","snare","tom","tink","App","Component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3cad5a18.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clap.a6e86dd7.wav\";","module.exports = __webpack_public_path__ + \"static/media/hihat.4ba39e07.wav\";","module.exports = __webpack_public_path__ + \"static/media/kick.4dd58595.wav\";","module.exports = __webpack_public_path__ + \"static/media/openhat.a62db465.wav\";","module.exports = __webpack_public_path__ + \"static/media/boom.550be808.wav\";","module.exports = __webpack_public_path__ + \"static/media/ride.b0d70ec5.wav\";","module.exports = __webpack_public_path__ + \"static/media/snare.80c4129b.wav\";","module.exports = __webpack_public_path__ + \"static/media/tom.572ed39d.wav\";","module.exports = __webpack_public_path__ + \"static/media/tink.2a6bb6f5.wav\";","import React from 'react';\r\nimport './Key.css';\r\n\r\nconst Key =({letter, name, id, onClick}) =>{\r\n\treturn(\r\n\t\t\t<div className='grow' >\r\n\t\t\t\t<div data-key={id} className=\"key\" onClick={onClick} >\t\r\n\t\t\t\t\t<h1>{letter}</h1>\r\n\t\t\t\t\t<p className=\"sound\">{name}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n}\r\nexport default Key;","//Imports\r\n\timport React from 'react';\r\n\timport Key from './Key';\r\n\timport './Key.css';\r\n\timport clap from '../sounds/clap.wav';\r\n\timport hihat from '../sounds/hihat.wav';\r\n\timport kick from '../sounds/kick.wav';\r\n\timport openhat from '../sounds/openhat.wav';\r\n\timport boom from '../sounds/boom.wav';\r\n\timport ride from '../sounds/ride.wav';\r\n\timport snare from '../sounds/snare.wav';\r\n\timport tom from '../sounds/tom.wav';\r\n\timport tink from '../sounds/tink.wav';\r\n\r\n//Component Keyboard\r\nconst Keyboard = ({beats}) => {\r\n\t//Handles key press and plays audio\r\n\tconst handleKeyDown = (e) => {\r\n\t\t//Selects audio and keys\r\n\t\tconst audio = document.querySelector(`audio[data-key=\"${e.keyCode}\"]`);\r\n\t\tconst key = document.querySelector(`div[data-key=\"${e.keyCode}\"]`);\r\n\t\t // Checks if keyCode is equal to key ID and changes class to \"playing\" when key is pressed.\r\n\t\t beats.map ((user, i) =>{\r\n\t\t \tif(e.keyCode === beats[i].id){\r\n\t\t\t\tkey.classList.add('playing');\r\n\t\t \t}\r\n\t\t \treturn key;\r\n\t\t })\r\n\t\t //Cheacks if audio is playing\r\n\t\t if(!audio) return;\r\n\t\t audio.currentTime = 0;\r\n\t\t //Plays audio\r\n\t\t audio.play();\r\n\t}\r\n\r\n\t//Handles click and plays audio\r\n\tfunction handleClick (e) {\r\n\t\tconst x = e.currentTarget;\r\n\t\tx.classList.add('playing');\r\n\t\tlet data = x.getAttribute('data-key');\r\n\t\tconst audio = document.querySelector(`audio[data-key=\"${data}\"]`);\r\n\t\t if(!audio) return;\r\n\t\t audio.currentTime = 0;\r\n\t\t //Plays audio\r\n\t\t audio.play();\r\n\t}\r\n\r\n\t// Removes \"playing\" class after key is released\r\n\tfunction removeTransition(e) {\r\n\t\t  if (e.propertyName !== 'transform') return;\r\n\t\t  e.target.classList.remove('playing');\r\n\t}\r\n\r\n\t//React hook to change the DOM after render\r\n\tReact.useEffect(() => {\r\n\t\t// Listens for keypress\r\n\t\twindow.addEventListener('keydown', handleKeyDown);\r\n\t\t// Creates and array from the \".key\" class\r\n\t\tconst keys = Array.from(document.querySelectorAll('.key'));\r\n\t\t//Loops through  array and and listens for 'transitionend' event and calls the removeTransition function\r\n\t\tkeys.forEach(key => key.addEventListener('transitionend', removeTransition));\r\n\t});\r\n\r\n//Render\r\n\treturn (\r\n\t\t<div className='flex flex-wrap flex-auto items-center justify-center '>\r\n\t\t\t<audio data-key=\"65\"  src={clap}></audio>\r\n\t\t\t<audio data-key=\"83\" src={hihat}></audio>\r\n\t\t\t<audio data-key=\"68\" src={kick}></audio>\r\n\t\t\t<audio data-key=\"70\" src={openhat}></audio>\r\n\t\t\t<audio data-key=\"71\" src={boom}></audio>\r\n\t\t\t<audio data-key=\"72\" src={ride}></audio>\r\n\t\t\t<audio data-key=\"74\" src={snare}></audio>\r\n\t\t\t<audio data-key=\"75\" src={tom}></audio>\r\n\t\t\t<audio data-key=\"76\" src={tink}></audio>\r\n\t\t\t{\r\n\t\t\t\t//Loops through beats object and add a key for each one\r\n\t\t\t\t beats.map((user, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Key \r\n\t\t\t\t\t\t\tkey={beats[i].id} \r\n\t\t\t\t\t\t\tletter={beats[i].key} \r\n\t\t\t\t\t\t\tname={beats[i].name} \r\n\t\t\t\t\t\t\tid={beats[i].id}\r\n\t\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t); \r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Keyboard;","export const beats = [\r\n\t{\r\n\t\t\"name\": \"Clap\",\r\n\t\t\"key\": 'A',\r\n\t\t\"id\": 65\r\n\t},\r\n\t{\r\n\t\t\"name\": \"HiHat\",\r\n\t\t\"key\": 'S',\r\n\t\t\"id\": 83\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Kick\",\r\n\t\t\"key\": 'D',\r\n\t\t\"id\": 68\r\n\t},\r\n\t{\r\n\t\t\"name\": \"OpenHat\",\r\n\t\t\"key\": 'F',\r\n\t\t\"id\": 70\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Boom\",\r\n\t\t\"key\": 'G',\r\n\t\t\"id\": 71\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Ride\",\r\n\t\t\"key\": 'H',\r\n\t\t\"id\": 72\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Snare\",\r\n\t\t\"key\": 'J',\r\n\t\t\"id\": 74\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Tom\",\r\n\t\t\"key\": 'K',\r\n\t\t\"id\": 75\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Tink\",\r\n\t\t\"key\": 'L',\r\n\t\t\"id\": 76\r\n\t}\r\n\r\n];\r\n","import React, { Component } from 'react';\r\nimport Keyboard from '../components/Keyboard';\r\nimport  './App.css';\r\nimport { beats } from '../components/beats';\r\n\r\nclass App extends Component {\r\n \trender() {\r\n \t\treturn (\r\n \t\t\t<div className='h100'>\r\n \t\t\t\t<h1 className='title'>DrumKit</h1>\r\n \t\t\t\t<div  className='ma5' >\r\n \t\t\t\t\t<Keyboard beats={beats} />\r\n \t\t\t\t</div>\r\n \t\t\t</div>\r\n \t\t);\r\n \t}\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />,  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}